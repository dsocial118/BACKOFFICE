# Generated by Django 4.2.20 on 2025-06-15 19:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("comedores", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Admision",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "num_expediente",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("num_if", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "legales_num_if",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("creado", models.DateField(auto_now_add=True, null=True)),
                ("modificado", models.DateField(auto_now=True, null=True)),
                (
                    "enviado_legales",
                    models.BooleanField(
                        default=False, verbose_name="¿Enviado a legales?"
                    ),
                ),
                (
                    "estado_legales",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("A Rectificar", "A Rectificar"),
                            ("Rectificado", "Rectificado"),
                            ("Pendiente de Validacion", "Pendiente de Validacion"),
                            ("Informe SGA Generado", "Informe SGA Generado"),
                            ("Resolucion Generada", "Resolucion Generada"),
                            ("Convenio Firmado", "Convenio Firmado"),
                            ("Finalizado", "Finalizado"),
                        ],
                        max_length=40,
                        null=True,
                        verbose_name="Estado",
                    ),
                ),
                (
                    "observaciones",
                    models.TextField(
                        blank=True, null=True, verbose_name="Observaciones"
                    ),
                ),
                (
                    "comedor",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="comedores.comedor",
                    ),
                ),
            ],
            options={
                "verbose_name": "admisiontecnico",
                "verbose_name_plural": "admisionestecnicos",
                "ordering": ["-creado"],
            },
        ),
        migrations.CreateModel(
            name="TipoDocumentacion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255, unique=True)),
                (
                    "descripcion",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
            ],
            options={
                "verbose_name": "Tipo de Documentación",
                "verbose_name_plural": "Tipos de Documentación",
                "ordering": ["nombre"],
            },
        ),
        migrations.CreateModel(
            name="TipoConvenio",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "tipoconvenio",
                "verbose_name_plural": "tiposconvenios",
                "indexes": [
                    models.Index(
                        fields=["nombre"], name="admisiones__nombre_bdabcc_idx"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="InformeTecnicoPDF",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tipo",
                    models.CharField(
                        choices=[("base", "Base"), ("juridico", "Jurídico")],
                        max_length=20,
                    ),
                ),
                ("informe_id", models.PositiveIntegerField()),
                ("archivo", models.FileField(upload_to="informes_tecnicos/")),
                ("creado", models.DateTimeField(auto_now_add=True)),
                (
                    "admision",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="informe_pdf",
                        to="admisiones.admision",
                    ),
                ),
                (
                    "comedor",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="comedores.comedor",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="InformeTecnicoJuridico",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "expediente_nro",
                    models.CharField(max_length=100, verbose_name="Expediente Nro."),
                ),
                (
                    "nombre_org",
                    models.CharField(
                        max_length=255,
                        verbose_name="Nombre de la Organización Solicitante",
                    ),
                ),
                (
                    "domicilio_org",
                    models.CharField(
                        max_length=255,
                        verbose_name="Domicilio de la Organización Solicitante",
                    ),
                ),
                (
                    "localidad_org",
                    models.CharField(
                        max_length=255,
                        verbose_name="Localidad de la Organización Solicitante",
                    ),
                ),
                (
                    "partido_org",
                    models.CharField(
                        max_length=255,
                        verbose_name="Partido de la Organización Solicitante",
                    ),
                ),
                (
                    "provincia_org",
                    models.CharField(
                        max_length=255,
                        verbose_name="Provincia de la Organización Solicitante",
                    ),
                ),
                (
                    "telefono_org",
                    models.CharField(
                        max_length=50,
                        verbose_name="Teléfono de la Organización Solicitante",
                    ),
                ),
                (
                    "mail_org",
                    models.EmailField(
                        max_length=254,
                        verbose_name="Mail de la Organización Solicitante",
                    ),
                ),
                (
                    "cuit_org",
                    models.CharField(
                        max_length=20,
                        verbose_name="CUIT de la Organización Solicitante",
                    ),
                ),
                (
                    "representante_nombre",
                    models.CharField(
                        max_length=255,
                        verbose_name="Nombre y Apellido del Representante",
                    ),
                ),
                (
                    "representante_cargo",
                    models.CharField(
                        max_length=100, verbose_name="Cargo del Representante"
                    ),
                ),
                (
                    "representante_dni",
                    models.CharField(
                        max_length=20, verbose_name="DNI del Representante"
                    ),
                ),
                (
                    "tipo_espacio",
                    models.CharField(
                        choices=[("Comedor", "Comedor"), ("Merendero", "Merendero")],
                        max_length=50,
                        verbose_name="Tipo de Espacio Comunitario",
                    ),
                ),
                (
                    "nombre_espacio",
                    models.CharField(
                        max_length=255, verbose_name="Nombre del Comedor/Merendero"
                    ),
                ),
                (
                    "domicilio_espacio",
                    models.CharField(
                        max_length=255, verbose_name="Domicilio del Comedor/Merendero"
                    ),
                ),
                (
                    "barrio_espacio",
                    models.CharField(
                        max_length=255, verbose_name="Barrio del Comedor/Merendero"
                    ),
                ),
                (
                    "localidad_espacio",
                    models.CharField(
                        max_length=255, verbose_name="Localidad del Comedor/Merendero"
                    ),
                ),
                (
                    "partido_espacio",
                    models.CharField(
                        max_length=255, verbose_name="Partido del Comedor/Merendero"
                    ),
                ),
                (
                    "provincia_espacio",
                    models.CharField(
                        max_length=255, verbose_name="Provincia del Comedor/Merendero"
                    ),
                ),
                (
                    "responsable_tarjeta_nombre",
                    models.CharField(
                        max_length=255,
                        verbose_name="Nombre del Responsable de la Tarjeta",
                    ),
                ),
                (
                    "responsable_tarjeta_dni",
                    models.CharField(
                        max_length=20, verbose_name="DNI del Responsable de la Tarjeta"
                    ),
                ),
                (
                    "responsable_tarjeta_domicilio",
                    models.CharField(
                        max_length=255,
                        verbose_name="Domicilio del Responsable de la Tarjeta",
                    ),
                ),
                (
                    "responsable_tarjeta_localidad",
                    models.CharField(
                        max_length=255,
                        verbose_name="Localidad del Responsable de la Tarjeta",
                    ),
                ),
                (
                    "responsable_tarjeta_provincia",
                    models.CharField(
                        max_length=255,
                        verbose_name="Provincia del Responsable de la Tarjeta",
                    ),
                ),
                (
                    "responsable_tarjeta_telefono",
                    models.CharField(
                        max_length=50,
                        verbose_name="Teléfono del Responsable de la Tarjeta",
                    ),
                ),
                (
                    "responsable_tarjeta_mail",
                    models.EmailField(
                        max_length=254,
                        verbose_name="Mail del Responsable de la Tarjeta",
                    ),
                ),
                (
                    "nota_gde_if",
                    models.CharField(max_length=255, verbose_name="Nota GDE IF"),
                ),
                (
                    "personas_desayuno_letras",
                    models.CharField(
                        max_length=255,
                        verbose_name="Cantidad Personas Desayuno (en letras)",
                    ),
                ),
                (
                    "dias_desayuno_letras",
                    models.CharField(
                        max_length=255,
                        verbose_name="Cantidad Días Desayuno (en letras)",
                    ),
                ),
                (
                    "personas_almuerzo_letras",
                    models.CharField(
                        max_length=255,
                        verbose_name="Cantidad Personas Almuerzo (en letras)",
                    ),
                ),
                (
                    "dias_almuerzo_letras",
                    models.CharField(
                        max_length=255,
                        verbose_name="Cantidad Días Almuerzo (en letras)",
                    ),
                ),
                (
                    "personas_merienda_letras",
                    models.CharField(
                        max_length=255,
                        verbose_name="Cantidad Personas Merienda (en letras)",
                    ),
                ),
                (
                    "dias_merienda_letras",
                    models.CharField(
                        max_length=255,
                        verbose_name="Cantidad Días Merienda (en letras)",
                    ),
                ),
                (
                    "personas_cena_letras",
                    models.CharField(
                        max_length=255,
                        verbose_name="Cantidad Personas Cena (en letras)",
                    ),
                ),
                (
                    "dias_cena_letras",
                    models.CharField(
                        max_length=255, verbose_name="Cantidad Días Cena (en letras)"
                    ),
                ),
                (
                    "constancia_subsidios_dnsa",
                    models.CharField(
                        max_length=255,
                        verbose_name="Constancia IF RTA DNSA sobre subsidios",
                    ),
                ),
                (
                    "constancia_subsidios_pnud",
                    models.CharField(
                        max_length=255,
                        verbose_name="Constancia IF RTA PNUD sobre subsidios",
                    ),
                ),
                (
                    "validacion_rncm_if",
                    models.CharField(
                        max_length=255,
                        verbose_name="Validación Registro Nacional Comedores/Merenderos (IF)",
                    ),
                ),
                (
                    "partido_destinataria",
                    models.CharField(
                        max_length=255,
                        verbose_name="Partido donde se ubica la población destinataria",
                    ),
                ),
                (
                    "provincia_destinataria",
                    models.CharField(
                        max_length=255,
                        verbose_name="Provincia donde se ubica la población destinataria",
                    ),
                ),
                (
                    "if_relevamiento",
                    models.CharField(
                        max_length=255, verbose_name="IF de relevamiento territorial"
                    ),
                ),
                (
                    "prestaciones_aprobadas_desayuno",
                    models.IntegerField(
                        default=0,
                        verbose_name="Cantidad de prestaciones aprobadas Desayuno (Lunes a Domingo)",
                    ),
                ),
                (
                    "prestaciones_aprobadas_almuerzo",
                    models.IntegerField(
                        default=0,
                        verbose_name="Cantidad de prestaciones aprobadas Almuerzo (Lunes a Domingo)",
                    ),
                ),
                (
                    "prestaciones_aprobadas_merienda",
                    models.IntegerField(
                        default=0,
                        verbose_name="Cantidad de prestaciones aprobadas Merienda (Lunes a Domingo)",
                    ),
                ),
                (
                    "prestaciones_aprobadas_cena",
                    models.IntegerField(
                        default=0,
                        verbose_name="Cantidad de prestaciones aprobadas Cena (Lunes a Domingo)",
                    ),
                ),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("Para revision", "Para revisión"),
                            ("Validado", "Validado"),
                            ("A subsanar", "A subsanar"),
                        ],
                        default="Para revision",
                        max_length=20,
                        verbose_name="Estado del Informe",
                    ),
                ),
                (
                    "admision",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="admisiones.admision",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="InformeTecnicoBase",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("expediente_nro", models.CharField(max_length=100)),
                (
                    "nombre_org",
                    models.CharField(
                        max_length=255,
                        verbose_name="Nombre de la Organización Solicitante",
                    ),
                ),
                (
                    "domicilio_org",
                    models.CharField(
                        max_length=255,
                        verbose_name="Domicilio de la Organización Solicitante",
                    ),
                ),
                (
                    "localidad_org",
                    models.CharField(
                        max_length=255,
                        verbose_name="Localidad de la Organización Solicitante",
                    ),
                ),
                (
                    "partido_org",
                    models.CharField(
                        max_length=255,
                        verbose_name="Partido de la Organización Solicitante",
                    ),
                ),
                (
                    "provincia_org",
                    models.CharField(
                        max_length=255,
                        verbose_name="Provincia de la Organización Solicitante",
                    ),
                ),
                (
                    "telefono_org",
                    models.CharField(
                        max_length=50,
                        verbose_name="Teléfono de la Organización Solicitante",
                    ),
                ),
                (
                    "mail_org",
                    models.EmailField(
                        max_length=254,
                        verbose_name="Mail de la Organización Solicitante",
                    ),
                ),
                (
                    "cuit_org",
                    models.CharField(
                        max_length=20,
                        verbose_name="CUIT de la Organización Solicitante",
                    ),
                ),
                (
                    "representante_nombre",
                    models.CharField(
                        max_length=255,
                        verbose_name="Nombre y Apellido del Representante",
                    ),
                ),
                (
                    "representante_cargo",
                    models.CharField(
                        max_length=100, verbose_name="Cargo del Representante"
                    ),
                ),
                (
                    "representante_dni",
                    models.CharField(
                        max_length=20, verbose_name="DNI del Representante"
                    ),
                ),
                (
                    "tipo_espacio",
                    models.CharField(
                        choices=[("Comedor", "Comedor"), ("Merendero", "Merendero")],
                        max_length=50,
                        verbose_name="Tipo de Espacio Comunitario",
                    ),
                ),
                (
                    "nombre_espacio",
                    models.CharField(
                        max_length=255, verbose_name="Nombre del Comedor/Merendero"
                    ),
                ),
                (
                    "domicilio_espacio",
                    models.CharField(
                        max_length=255, verbose_name="Domicilio del Comedor/Merendero"
                    ),
                ),
                (
                    "barrio_espacio",
                    models.CharField(
                        max_length=255, verbose_name="Barrio del Comedor/Merendero"
                    ),
                ),
                (
                    "localidad_espacio",
                    models.CharField(
                        max_length=255, verbose_name="Localidad del Comedor/Merendero"
                    ),
                ),
                (
                    "partido_espacio",
                    models.CharField(
                        max_length=255, verbose_name="Partido del Comedor/Merendero"
                    ),
                ),
                (
                    "provincia_espacio",
                    models.CharField(
                        max_length=255, verbose_name="Provincia del Comedor/Merendero"
                    ),
                ),
                (
                    "responsable_tarjeta_nombre",
                    models.CharField(
                        max_length=255,
                        verbose_name="Nombre del Responsable de la Tarjeta",
                    ),
                ),
                (
                    "responsable_tarjeta_dni",
                    models.CharField(
                        max_length=20, verbose_name="DNI del Responsable de la Tarjeta"
                    ),
                ),
                (
                    "responsable_tarjeta_domicilio",
                    models.CharField(
                        max_length=255, verbose_name="Domicilio del Responsable"
                    ),
                ),
                (
                    "responsable_tarjeta_localidad",
                    models.CharField(
                        max_length=255, verbose_name="Localidad del Responsable"
                    ),
                ),
                (
                    "responsable_tarjeta_provincia",
                    models.CharField(
                        max_length=255, verbose_name="Provincia del Responsable"
                    ),
                ),
                (
                    "responsable_tarjeta_telefono",
                    models.CharField(
                        max_length=50, verbose_name="Teléfono del Responsable"
                    ),
                ),
                (
                    "responsable_tarjeta_mail",
                    models.EmailField(
                        max_length=254, verbose_name="Mail del Responsable"
                    ),
                ),
                (
                    "declaracion_jurada",
                    models.CharField(
                        max_length=255,
                        verbose_name="Declaración Jurada sobre recepción de subsidios nacionales",
                    ),
                ),
                (
                    "constancia_inexistencia_subsidios",
                    models.CharField(
                        max_length=255,
                        verbose_name="Constancia de inexistencia de percepción de otros subsidios nacionales",
                    ),
                ),
                (
                    "organizacion_avalista_1",
                    models.CharField(
                        max_length=255, verbose_name="Organización Avalista 1"
                    ),
                ),
                (
                    "organizacion_avalista_2",
                    models.CharField(
                        max_length=255, verbose_name="Organización Avalista 2"
                    ),
                ),
                (
                    "material_difusion",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Material de difusión vinculado",
                    ),
                ),
                (
                    "prestaciones_desayuno",
                    models.IntegerField(
                        default=0,
                        verbose_name="Cantidad de Prestaciones Mensuales Desayuno",
                    ),
                ),
                (
                    "prestaciones_almuerzo",
                    models.IntegerField(
                        default=0,
                        verbose_name="Cantidad de Prestaciones Mensuales Almuerzo",
                    ),
                ),
                (
                    "prestaciones_merienda",
                    models.IntegerField(
                        default=0,
                        verbose_name="Cantidad de Prestaciones Mensuales Merienda",
                    ),
                ),
                (
                    "prestaciones_cena",
                    models.IntegerField(
                        default=0,
                        verbose_name="Cantidad de Prestaciones Mensuales Cena",
                    ),
                ),
                (
                    "prestaciones_totales",
                    models.IntegerField(
                        default=0, verbose_name="Total Mensual de Prestaciones"
                    ),
                ),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("Para revision", "Para revisión"),
                            ("Validado", "Validado"),
                            ("A subsanar", "A subsanar"),
                        ],
                        default="Para revision",
                        max_length=20,
                        verbose_name="Estado de la Solicitud",
                    ),
                ),
                (
                    "admision",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="admisiones.admision",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FormularioRESO",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pregunta1", models.CharField(blank=True, max_length=255, null=True)),
                ("pregunta2", models.CharField(blank=True, max_length=255, null=True)),
                ("pregunta3", models.CharField(blank=True, max_length=255, null=True)),
                ("creado", models.DateTimeField(auto_now_add=True)),
                (
                    "admision",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="formularios_reso",
                        to="admisiones.admision",
                    ),
                ),
                (
                    "creado_por",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FormularioProyectoDeConvenio",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pregunta1", models.CharField(blank=True, max_length=255, null=True)),
                ("pregunta2", models.CharField(blank=True, max_length=255, null=True)),
                ("pregunta3", models.CharField(blank=True, max_length=255, null=True)),
                ("creado", models.DateTimeField(auto_now_add=True)),
                (
                    "admision",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="formularios_proyecto_convenio",
                        to="admisiones.admision",
                    ),
                ),
                (
                    "creado_por",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EstadoAdmision",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=15)),
            ],
            options={
                "verbose_name": "estadosadmision",
                "verbose_name_plural": "estadosadmisiones",
                "indexes": [
                    models.Index(
                        fields=["nombre"], name="admisiones__nombre_bcd423_idx"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="DocumentosExpediente",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(blank=True, max_length=255, null=True)),
                ("tipo", models.CharField(blank=True, max_length=255, null=True)),
                ("value", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "archivo",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="comedor/admisiones_archivos/expediente",
                    ),
                ),
                (
                    "rectificar",
                    models.BooleanField(default=False, verbose_name="Rectificar"),
                ),
                (
                    "observaciones",
                    models.TextField(
                        blank=True, null=True, verbose_name="Observaciones"
                    ),
                ),
                ("num_if", models.CharField(blank=True, max_length=100, null=True)),
                ("creado", models.DateField(auto_now_add=True, null=True)),
                (
                    "admision",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="admisiones.admision",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Documentacion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
                (
                    "convenios",
                    models.ManyToManyField(blank=True, to="admisiones.tipoconvenio"),
                ),
                (
                    "tipo",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="admisiones.tipodocumentacion",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ArchivoAdmision",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "archivo",
                    models.FileField(
                        blank=True, null=True, upload_to="comedor/admisiones_archivos/"
                    ),
                ),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("pendiente", "Pendiente"),
                            ("validar", "A Validar"),
                            ("A Validar Abogado", "A Validar Abogado"),
                            ("Rectificar", "Rectificar"),
                        ],
                        default="pendiente",
                        max_length=20,
                    ),
                ),
                (
                    "rectificar",
                    models.BooleanField(default=False, verbose_name="Rectificar"),
                ),
                (
                    "observaciones",
                    models.TextField(
                        blank=True, null=True, verbose_name="Observaciones"
                    ),
                ),
                ("num_if", models.CharField(blank=True, max_length=100, null=True)),
                ("creado", models.DateField(auto_now_add=True, null=True)),
                ("modificado", models.DateField(auto_now=True, null=True)),
                (
                    "admision",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="admisiones.admision",
                    ),
                ),
                (
                    "documentacion",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="admisiones.documentacion",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AdmisionHistorial",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("campo", models.CharField(max_length=50)),
                ("valor_anterior", models.TextField(blank=True, null=True)),
                ("valor_nuevo", models.TextField(blank=True, null=True)),
                ("fecha", models.DateTimeField(auto_now_add=True)),
                (
                    "admision",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="historial",
                        to="admisiones.admision",
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="admision",
            name="estado",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="admisiones.estadoadmision",
            ),
        ),
        migrations.AddField(
            model_name="admision",
            name="tipo_convenio",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="admisiones.tipoconvenio",
            ),
        ),
        migrations.AddIndex(
            model_name="admision",
            index=models.Index(
                fields=["comedor"], name="admisiones__comedor_1d8f2b_idx"
            ),
        ),
    ]
