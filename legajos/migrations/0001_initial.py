# Generated by Django 4.2.16 on 2025-01-15 03:59

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("usuarios", "0001_initial"),
        ("configuraciones", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Accion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("accion", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Acción",
                "verbose_name_plural": "Acciones",
            },
        ),
        migrations.CreateModel(
            name="ActividadRealizada",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("actividad", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Actividad Realizada",
                "verbose_name_plural": "Actividades Realizadas",
            },
        ),
        migrations.CreateModel(
            name="Agua",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tipo", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Agua",
                "verbose_name_plural": "Aguas",
            },
        ),
        migrations.CreateModel(
            name="AportesJubilacion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("aporte", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Aporte Jubilación",
                "verbose_name_plural": "Aportes Jubilación",
            },
        ),
        migrations.CreateModel(
            name="AreaCurso",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("area", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Area Curso",
                "verbose_name_plural": "Areas Cursos",
            },
        ),
        migrations.CreateModel(
            name="AsisteEscuela",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("asiste", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Asiste Escuela",
                "verbose_name_plural": "Asiste Escuelas",
            },
        ),
        migrations.CreateModel(
            name="CantidadAmbientes",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cantidad", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Cantidad de Ambientes",
                "verbose_name_plural": "Cantidades de Ambientes",
            },
        ),
        migrations.CreateModel(
            name="CentrosSalud",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("centro", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Centro de Salud",
                "verbose_name_plural": "Centros de Salud",
            },
        ),
        migrations.CreateModel(
            name="CondicionDe",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("condicion", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Condición de",
                "verbose_name_plural": "Condiciones de",
            },
        ),
        migrations.CreateModel(
            name="ContextoCasa",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("contexto", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Contexto de Casa",
                "verbose_name_plural": "Contextos de Casa",
            },
        ),
        migrations.CreateModel(
            name="Desague",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tipo", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Desagüe",
                "verbose_name_plural": "Desagües",
            },
        ),
        migrations.CreateModel(
            name="Direccion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="DuracionTrabajo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("duracion", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Duración del Trabajo",
                "verbose_name_plural": "Duraciones del Trabajo",
            },
        ),
        migrations.CreateModel(
            name="EstadoCivil",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("estado", models.CharField(max_length=20)),
            ],
            options={
                "verbose_name": "Estado Civil",
                "verbose_name_plural": "Estados Civiles",
            },
        ),
        migrations.CreateModel(
            name="EstadoDerivacion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("estado", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Estado de Derivación",
                "verbose_name_plural": "Estados de Derivación",
            },
        ),
        migrations.CreateModel(
            name="EstadoEducativo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("estado", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Estado Educativo",
                "verbose_name_plural": "Estados Educativos",
            },
        ),
        migrations.CreateModel(
            name="EstadoIntervencion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("estado", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Estado de Intervención",
                "verbose_name_plural": "Estados de Intervención",
            },
        ),
        migrations.CreateModel(
            name="EstadoLlamado",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("estado", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Estado de Llamado",
                "verbose_name_plural": "Estados de Llamado",
            },
        ),
        migrations.CreateModel(
            name="EstadoNivelEducativo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("estado", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Estado Nivel Educativo",
                "verbose_name_plural": "Estados Niveles Educativos",
            },
        ),
        migrations.CreateModel(
            name="EstadoRelacion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("estado", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Estado de Relación",
                "verbose_name_plural": "Estados de Relación",
            },
        ),
        migrations.CreateModel(
            name="EstadosIntervencion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "EstadosIntervencion",
                "verbose_name_plural": "EstadosIntervenciones",
            },
        ),
        migrations.CreateModel(
            name="EstadosLlamados",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "EstadoLlamado",
                "verbose_name_plural": "EstadosLlamados",
            },
        ),
        migrations.CreateModel(
            name="Frecuencia",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("frecuencia", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Frecuencia",
                "verbose_name_plural": "Frecuencias",
            },
        ),
        migrations.CreateModel(
            name="Gas",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tipo", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Gas",
                "verbose_name_plural": "Gases",
            },
        ),
        migrations.CreateModel(
            name="Genero",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("genero", models.CharField(max_length=20)),
            ],
            options={
                "verbose_name": "Género",
                "verbose_name_plural": "Géneros",
            },
        ),
        migrations.CreateModel(
            name="GeneroPronombre",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pronombre", models.CharField(max_length=10)),
            ],
            options={
                "verbose_name": "Género Pronombre",
                "verbose_name_plural": "Géneros Pronombres",
            },
        ),
        migrations.CreateModel(
            name="Grado",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("grado", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Grado",
                "verbose_name_plural": "Grados",
            },
        ),
        migrations.CreateModel(
            name="Importancia",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("importancia", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Importancia",
                "verbose_name_plural": "Importancias",
            },
        ),
        migrations.CreateModel(
            name="Inodoro",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tipo", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Inodoro",
                "verbose_name_plural": "Inodoros",
            },
        ),
        migrations.CreateModel(
            name="InstitucionesEducativas",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("institucion", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Institucion Educativa",
                "verbose_name_plural": "Instituciones Educativas",
            },
        ),
        migrations.CreateModel(
            name="LegajoAlertas",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fecha_inicio", models.DateField(auto_now=True)),
                (
                    "observaciones",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "creada_por",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="creada_por",
                        to="usuarios.usuarios",
                    ),
                ),
                (
                    "fk_alerta",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="alerta",
                        to="configuraciones.alertas",
                    ),
                ),
            ],
            options={
                "verbose_name": "LegajoAlertas",
                "verbose_name_plural": "LegajosAlertas",
                "ordering": ["-fecha_inicio"],
            },
        ),
        migrations.CreateModel(
            name="LegajoGrupoFamiliar",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "vinculo_inverso",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("conviven", models.BooleanField(blank=True, null=True)),
                ("cuidador_principal", models.BooleanField(blank=True, null=True)),
                (
                    "observaciones",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "estado_relacion",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.estadorelacion",
                    ),
                ),
            ],
            options={
                "verbose_name": "LegajoGrupoFamiliar",
                "verbose_name_plural": "LegajosGrupoFamiliar",
                "ordering": ["fk_legajo_2"],
            },
        ),
        migrations.CreateModel(
            name="ModoContratacion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("modo", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Modo de Contratación",
                "verbose_name_plural": "Modos de Contratación",
            },
        ),
        migrations.CreateModel(
            name="MotivoNivelIncompleto",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("motivo", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Motivo Nivel Incompleto",
                "verbose_name_plural": "Motivos Niveles Incompletos",
            },
        ),
        migrations.CreateModel(
            name="Nacionalidad",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nacionalidad", models.CharField(max_length=50)),
            ],
            options={
                "verbose_name": "Nacionalidad",
                "verbose_name_plural": "Nacionalidades",
            },
        ),
        migrations.CreateModel(
            name="Nivel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nivel", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Nivel",
                "verbose_name_plural": "Niveles",
            },
        ),
        migrations.CreateModel(
            name="NivelEducativo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nivel", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Nivel Educativo",
                "verbose_name_plural": "Niveles Educativos",
            },
        ),
        migrations.CreateModel(
            name="NoBusquedaLaboral",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("motivo", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Motivo de No Búsqueda Laboral",
                "verbose_name_plural": "Motivos de No Búsqueda Laboral",
            },
        ),
        migrations.CreateModel(
            name="ProgramasLlamados",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "ProgramasLlamados",
                "verbose_name_plural": "ProgramasLlamados",
            },
        ),
        migrations.CreateModel(
            name="Rechazo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("motivo", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Motivo de Rechazo",
                "verbose_name_plural": "Motivos de Rechazo",
            },
        ),
        migrations.CreateModel(
            name="Sexo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sexo", models.CharField(max_length=10)),
            ],
            options={
                "verbose_name": "Sexo",
                "verbose_name_plural": "Sexos",
            },
        ),
        migrations.CreateModel(
            name="TiempoBusquedaLaboral",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tiempo", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Tiempo de Búsqueda Laboral",
                "verbose_name_plural": "Tiempos de Búsqueda Laboral",
            },
        ),
        migrations.CreateModel(
            name="TipoAyudaHogar",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tipo", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Tipo de Ayuda al Hogar",
                "verbose_name_plural": "Tipos de Ayuda al Hogar",
            },
        ),
        migrations.CreateModel(
            name="TipoConstruccionVivienda",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tipo", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Tipo de Construcción de Vivienda",
                "verbose_name_plural": "Tipos de Construcción de Vivienda",
            },
        ),
        migrations.CreateModel(
            name="TipoDiscapacidad",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tipo", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Tipo de Discapacidad",
                "verbose_name_plural": "Tipos de Discapacidad",
            },
        ),
        migrations.CreateModel(
            name="TipoDoc",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tipo", models.CharField(max_length=20)),
            ],
            options={
                "verbose_name": "Tipo de Documento",
                "verbose_name_plural": "Tipos de Documentos",
            },
        ),
        migrations.CreateModel(
            name="TipoEnfermedad",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tipo", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Tipo de Enfermedad",
                "verbose_name_plural": "Tipos de Enfermedad",
            },
        ),
        migrations.CreateModel(
            name="TipoEstadoVivienda",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tipo", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Tipo de Estado de Vivienda",
                "verbose_name_plural": "Tipos de Estado de Vivienda",
            },
        ),
        migrations.CreateModel(
            name="TipoGestion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("gestion", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Tipo Gestion",
                "verbose_name_plural": "Tipos Gestion",
            },
        ),
        migrations.CreateModel(
            name="TipoIntervencion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "TipoIntervencion",
                "verbose_name_plural": "TiposIntervencion",
            },
        ),
        migrations.CreateModel(
            name="TipoPisosVivienda",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tipo", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Tipo de Pisos de Vivienda",
                "verbose_name_plural": "Tipos de Pisos de Vivienda",
            },
        ),
        migrations.CreateModel(
            name="TipoPosesionVivienda",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tipo", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Tipo de Posesión de Vivienda",
                "verbose_name_plural": "Tipos de Posesión de Vivienda",
            },
        ),
        migrations.CreateModel(
            name="TipoTechoVivienda",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tipo", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Tipo de Techo de Vivienda",
                "verbose_name_plural": "Tipos de Techo de Vivienda",
            },
        ),
        migrations.CreateModel(
            name="TipoVivienda",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tipo", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Tipo de Vivienda",
                "verbose_name_plural": "Tipos de Vivienda",
            },
        ),
        migrations.CreateModel(
            name="Turno",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("turno", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Turno",
                "verbose_name_plural": "Turnos",
            },
        ),
        migrations.CreateModel(
            name="VinculoFamiliar",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("vinculo", models.CharField(max_length=255)),
                ("inverso", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Vínculo Familiar",
                "verbose_name_plural": "Vínculos Familiares",
            },
        ),
        migrations.CreateModel(
            name="TipoLlamado",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
                (
                    "fk_programas_llamados",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.programasllamados",
                    ),
                ),
            ],
            options={
                "verbose_name": "TipoLlamado",
                "verbose_name_plural": "TiposLammado",
            },
        ),
        migrations.CreateModel(
            name="SubTipoLlamado",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
                (
                    "fk_tipo_llamado",
                    models.ForeignKey(
                        default=1,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.tipollamado",
                    ),
                ),
            ],
            options={
                "verbose_name": "SubTipoLlamado",
                "verbose_name_plural": "SubTiposLlamado",
            },
        ),
        migrations.CreateModel(
            name="SubIntervencion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255)),
                (
                    "fk_subintervencion",
                    models.ForeignKey(
                        default=1,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.tipointervencion",
                    ),
                ),
            ],
            options={
                "verbose_name": "SubIntervencion",
                "verbose_name_plural": "SubIntervenciones",
            },
        ),
        migrations.CreateModel(
            name="Legajos",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("apellido", models.CharField(max_length=255)),
                ("nombre", models.CharField(max_length=255)),
                ("fecha_nacimiento", models.DateField()),
                (
                    "documento",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(3000000),
                            django.core.validators.MaxValueValidator(100000000),
                        ],
                    ),
                ),
                ("calle", models.CharField(blank=True, max_length=255, null=True)),
                ("altura", models.IntegerField(blank=True, null=True)),
                ("latitud", models.CharField(blank=True, max_length=255, null=True)),
                ("longitud", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "pisodpto",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Piso/Dpto (optativo)",
                    ),
                ),
                (
                    "torrepasillo",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Torre / Pasillo (optativo)",
                    ),
                ),
                (
                    "escaleramanzana",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Escalera / Manzana (optativo)",
                    ),
                ),
                (
                    "codigopostal",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Código Postal"
                    ),
                ),
                ("telefono", models.IntegerField(blank=True, null=True)),
                (
                    "telefonoalt",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Telefono Alternativo"
                    ),
                ),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("foto", models.ImageField(blank=True, null=True, upload_to="legajos")),
                (
                    "observaciones",
                    models.CharField(
                        blank=True,
                        max_length=500,
                        null=True,
                        verbose_name="Observaciones (optativo)",
                    ),
                ),
                ("estado", models.BooleanField(default=True)),
                ("creado", models.DateField(auto_now_add=True)),
                ("modificado", models.DateField(auto_now=True)),
                ("cuil", models.BigIntegerField(blank=True, null=True)),
                ("_id", models.CharField(blank=True, max_length=255, null=True)),
                ("cuit", models.BigIntegerField(blank=True, null=True)),
                (
                    "circuito",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="configuraciones.circuito",
                    ),
                ),
                (
                    "creado_por",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="creado_por",
                        to="usuarios.usuarios",
                    ),
                ),
                (
                    "estado_civil",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.estadocivil",
                    ),
                ),
                (
                    "fk_asentamiento",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="configuraciones.asentamiento",
                    ),
                ),
                (
                    "fk_departamento",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="configuraciones.departamento",
                    ),
                ),
                (
                    "fk_localidad",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="configuraciones.localidad",
                    ),
                ),
                (
                    "fk_municipio",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="configuraciones.municipio",
                    ),
                ),
                (
                    "fk_provincia",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="configuraciones.provincia",
                    ),
                ),
                (
                    "m2m_alertas",
                    models.ManyToManyField(
                        blank=True,
                        through="legajos.LegajoAlertas",
                        to="configuraciones.alertas",
                    ),
                ),
                (
                    "m2m_familiares",
                    models.ManyToManyField(
                        blank=True,
                        through="legajos.LegajoGrupoFamiliar",
                        to="legajos.legajos",
                    ),
                ),
                (
                    "modificado_por",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="modificado_por",
                        to="usuarios.usuarios",
                    ),
                ),
                (
                    "nacionalidad",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.nacionalidad",
                    ),
                ),
                (
                    "sexo",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.sexo",
                    ),
                ),
                (
                    "tipo_doc",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.tipodoc",
                        verbose_name="Tipo documento",
                    ),
                ),
            ],
            options={
                "verbose_name": "Legajo",
                "verbose_name_plural": "Legajos",
                "ordering": ["apellido"],
            },
        ),
        migrations.CreateModel(
            name="LegajoGrupoHogar",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "estado_relacion",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.estadorelacion",
                    ),
                ),
                (
                    "fk_legajo_1Hogar",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hogar_1",
                        to="legajos.legajos",
                    ),
                ),
                (
                    "fk_legajo_2Hogar",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hogar_2",
                        to="legajos.legajos",
                    ),
                ),
            ],
            options={
                "verbose_name": "LegajoGrupoHogarForm",
                "verbose_name_plural": "LegajoGrupoHogarForm",
                "ordering": ["fk_legajo_2Hogar"],
            },
        ),
        migrations.AddField(
            model_name="legajogrupofamiliar",
            name="fk_legajo_1",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="fk_legajo1",
                to="legajos.legajos",
            ),
        ),
        migrations.AddField(
            model_name="legajogrupofamiliar",
            name="fk_legajo_2",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="fk_legajo2",
                to="legajos.legajos",
            ),
        ),
        migrations.AddField(
            model_name="legajogrupofamiliar",
            name="vinculo",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="legajos.vinculofamiliar",
            ),
        ),
        migrations.AddField(
            model_name="legajoalertas",
            name="fk_legajo",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="legajo_alerta",
                to="legajos.legajos",
            ),
        ),
        migrations.CreateModel(
            name="Intervencion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fecha", models.DateTimeField(auto_now_add=True)),
                ("fk_direccion", models.ManyToManyField(to="legajos.direccion")),
                (
                    "fk_estado",
                    models.ForeignKey(
                        default=1,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.estadosintervencion",
                    ),
                ),
                (
                    "fk_legajo",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.legajos",
                    ),
                ),
                (
                    "fk_subintervencion",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.subintervencion",
                    ),
                ),
                (
                    "fk_tipo_intervencion",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.tipointervencion",
                    ),
                ),
                (
                    "fk_usuario",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Intervencion",
                "verbose_name_plural": "Intervenciones",
                "ordering": ["-fecha"],
            },
        ),
        migrations.CreateModel(
            name="HistorialLegajoAlertas",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "observaciones",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("fecha_inicio", models.DateField(auto_now=True)),
                ("fecha_fin", models.DateField(blank=True, null=True)),
                ("meses_activa", models.JSONField(blank=True, default=list)),
                (
                    "creada_por",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hist_creada_por",
                        to="usuarios.usuarios",
                    ),
                ),
                (
                    "eliminada_por",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hist_eliminada_por",
                        to="usuarios.usuarios",
                    ),
                ),
                (
                    "fk_alerta",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hist_alerta",
                        to="configuraciones.alertas",
                    ),
                ),
                (
                    "fk_legajo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hist_legajo_alerta",
                        to="legajos.legajos",
                    ),
                ),
            ],
            options={
                "verbose_name": "HistorialLegajoAlertas",
                "verbose_name_plural": "HistorialesLegajoAlertas",
                "ordering": ["-fecha_inicio"],
            },
        ),
        migrations.CreateModel(
            name="DimensionVivienda",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cant_convivientes",
                    models.SmallIntegerField(
                        blank=True,
                        default=0,
                        null=True,
                        verbose_name="¿Cuántas personas viven en la vivienda?",
                    ),
                ),
                (
                    "cant_menores",
                    models.SmallIntegerField(
                        blank=True,
                        null=True,
                        verbose_name="¿Cuántos de ellos son menores de 18 años?",
                    ),
                ),
                (
                    "cant_camas",
                    models.SmallIntegerField(
                        blank=True,
                        null=True,
                        verbose_name="¿Cuántas camas/ colchones posee?",
                    ),
                ),
                (
                    "cant_hogares",
                    models.SmallIntegerField(
                        blank=True,
                        null=True,
                        verbose_name="¿Cuantos hogares hay en la vivienda?",
                    ),
                ),
                (
                    "obs_vivienda",
                    models.CharField(
                        blank=True,
                        max_length=500,
                        null=True,
                        verbose_name="Observaciones",
                    ),
                ),
                ("creado", models.DateField(auto_now_add=True)),
                ("modificado", models.DateField(auto_now=True)),
                (
                    "hay_desmoronamiento",
                    models.BooleanField(
                        default=False, verbose_name="Existe riesgo de desmoronamiento?"
                    ),
                ),
                (
                    "PoseenCelular",
                    models.BooleanField(
                        default=False,
                        verbose_name="¿En tu hogar cuentan con Teléfonos celulares?",
                    ),
                ),
                (
                    "PoseenPC",
                    models.BooleanField(
                        default=False,
                        verbose_name="¿En tu hogar cuentan con Computadoras? (de escritorio / laptop / tablet) ",
                    ),
                ),
                (
                    "Poseeninternet",
                    models.BooleanField(
                        default=False,
                        verbose_name="En tu hogar cuentan con Internet (a través del celular o por conexión en la vivienda - wifi)",
                    ),
                ),
                (
                    "hay_agua_caliente",
                    models.BooleanField(
                        default=False, verbose_name="¿Posee Agua caliente?"
                    ),
                ),
                (
                    "ContextoCasa",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.contextocasa",
                    ),
                ),
                (
                    "agua",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.agua",
                    ),
                ),
                (
                    "cant_ambientes",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.cantidadambientes",
                    ),
                ),
                (
                    "desague",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.desague",
                    ),
                ),
                (
                    "fk_legajo",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="legajos.legajos",
                    ),
                ),
                (
                    "gas",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.gas",
                    ),
                ),
                (
                    "hay_banio",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.inodoro",
                    ),
                ),
                (
                    "material",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.tipoconstruccionvivienda",
                    ),
                ),
                (
                    "pisos",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.tipopisosvivienda",
                    ),
                ),
                (
                    "posesion",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.tipoposesionvivienda",
                    ),
                ),
                (
                    "techos",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.tipotechovivienda",
                    ),
                ),
                (
                    "tipo",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.tipovivienda",
                    ),
                ),
            ],
            options={
                "verbose_name": "DimensionVivienda",
                "verbose_name_plural": "DimensionesVivienda",
                "ordering": ["fk_legajo"],
            },
        ),
        migrations.CreateModel(
            name="DimensionTrabajo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ocupacion", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "obs_trabajo",
                    models.CharField(
                        blank=True,
                        max_length=500,
                        null=True,
                        verbose_name="Observaciones",
                    ),
                ),
                ("creado", models.DateField(auto_now_add=True)),
                ("modificado", models.DateField(auto_now=True)),
                (
                    "horasSemanales",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Considerando todas las actividades que realizás en una semana, por las que recibís algún pago, sea en dinero o en especie, ¿cuántas horas por semana trabajas habitualmente?",
                    ),
                ),
                (
                    "busquedaLaboral",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="¿Buscaste trabajo en los últimos 30 días?",
                    ),
                ),
                (
                    "conviviente_trabaja",
                    models.BooleanField(
                        blank=True, null=True, verbose_name="¿Conviviente trabaja?"
                    ),
                ),
                (
                    "tiene_trabajo",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="¿Actualmente realizás alguna actividad laboral, productiva o comunitaria?",
                    ),
                ),
                (
                    "TiempoBusquedaLaboral",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.tiempobusquedalaboral",
                        verbose_name="¿Cuánto hace que buscás trabajo?",
                    ),
                ),
                (
                    "actividadRealizadaComo",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.actividadrealizada",
                        verbose_name="Esa actividad la realizás como…",
                    ),
                ),
                (
                    "aportesJubilacion",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.aportesjubilacion",
                        verbose_name="Por ese trabajo, ¿te descuentan jubilación o aportas vos mismo?",
                    ),
                ),
                (
                    "duracionTrabajo",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.duraciontrabajo",
                        verbose_name="¿Este trabajo es…",
                    ),
                ),
                (
                    "fk_legajo",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="legajos.legajos",
                    ),
                ),
                (
                    "modo_contratacion",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.modocontratacion",
                    ),
                ),
                (
                    "noBusquedaLaboral",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.nobusquedalaboral",
                        verbose_name="¿Por qué motivo no buscaste trabajo? (Indicá el motivo principal)",
                    ),
                ),
            ],
            options={
                "verbose_name": "DimensionLaboral",
                "verbose_name_plural": "DimensionesLaborales",
                "ordering": ["fk_legajo"],
            },
        ),
        migrations.CreateModel(
            name="DimensionSalud",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "hay_obra_social",
                    models.BooleanField(
                        blank=True, null=True, verbose_name="¿Posee cobertura de salud?"
                    ),
                ),
                (
                    "hay_enfermedad",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="¿Posee alguna enfermedad recurrente o crónica?",
                    ),
                ),
                (
                    "hay_discapacidad",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="¿Posee alguna discapacidad?",
                    ),
                ),
                (
                    "hay_cud",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="¿Posee certificado de discapacidad?",
                    ),
                ),
                (
                    "obs_salud",
                    models.CharField(
                        blank=True,
                        max_length=500,
                        null=True,
                        verbose_name="Observaciones",
                    ),
                ),
                ("creado", models.DateField(auto_now_add=True)),
                ("modificado", models.DateField(auto_now=True)),
                (
                    "fk_legajo",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="legajos.legajos",
                    ),
                ),
                (
                    "frec_controles",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.frecuencia",
                        verbose_name="¿Con qué frecuencia realiza controles médicos?",
                    ),
                ),
                (
                    "lugares_atencion",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.centrossalud",
                        verbose_name="Centro de Salud en donde se atiende",
                    ),
                ),
            ],
            options={
                "verbose_name": "DimensionSalud",
                "verbose_name_plural": "DimensionesSalud",
                "ordering": ["fk_legajo"],
            },
        ),
        migrations.CreateModel(
            name="DimensionFamilia",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cant_hijos",
                    models.SmallIntegerField(
                        blank=True, null=True, verbose_name="Cantidad de hijos"
                    ),
                ),
                (
                    "otro_responsable",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="¿Hay otro adulto responsable? (Padre o apoyo en la crianza)",
                    ),
                ),
                (
                    "hay_embarazadas",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="Personas en el hogar embarazadas",
                    ),
                ),
                (
                    "hay_prbl_smental",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="Personas en el hogar con problemas de salud mental",
                    ),
                ),
                (
                    "hay_fam_discapacidad",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="Personas en el hogar con discapacidad",
                    ),
                ),
                (
                    "hay_enf_cronica",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="Personas en el hogar con enfermedades crónicas",
                    ),
                ),
                (
                    "hay_priv_libertad",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="Personas en el hogar privados de su libertad",
                    ),
                ),
                (
                    "obs_familia",
                    models.CharField(
                        blank=True,
                        max_length=500,
                        null=True,
                        verbose_name="Observaciones",
                    ),
                ),
                ("creado", models.DateField(auto_now_add=True)),
                ("modificado", models.DateField(auto_now=True)),
                (
                    "fk_legajo",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="legajos.legajos",
                    ),
                ),
            ],
            options={
                "verbose_name": "DimensionFamilia",
                "verbose_name_plural": "DimensionesFamilia",
                "ordering": ["fk_legajo"],
            },
        ),
        migrations.CreateModel(
            name="DimensionEducacion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "obs_educacion",
                    models.CharField(
                        blank=True,
                        max_length=500,
                        null=True,
                        verbose_name="Observaciones",
                    ),
                ),
                ("creado", models.DateField(auto_now_add=True)),
                ("modificado", models.DateField(auto_now=True)),
                (
                    "acepta_terminos",
                    models.BooleanField(
                        default=False, verbose_name="Acepto los términos y condiciones"
                    ),
                ),
                (
                    "barrioInstitucion",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Barrio"
                    ),
                ),
                (
                    "calleInstitucion",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Calle"
                    ),
                ),
                (
                    "numeroInstitucion",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Número"
                    ),
                ),
                (
                    "realizandoCurso",
                    models.BooleanField(
                        default=False,
                        verbose_name="¿Actualmente te encontrás haciendo algún curso de capacitación?",
                    ),
                ),
                (
                    "interesCapLab",
                    models.BooleanField(
                        default=False,
                        verbose_name="¿Tenés interés en realizar cursos de capacitación laboral?",
                    ),
                ),
                (
                    "oficio",
                    models.BooleanField(
                        default=False,
                        verbose_name="¿Tenés conocimiento de algún oficio?",
                    ),
                ),
                (
                    "interesEstudio",
                    models.BooleanField(
                        default=False, verbose_name="¿Le interesa estudiar?"
                    ),
                ),
                (
                    "interesCurso",
                    models.BooleanField(
                        default=False, verbose_name="¿le interesa algun curso?"
                    ),
                ),
                (
                    "areaCurso",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="area_curso_dimension",
                        to="legajos.areacurso",
                        verbose_name="¿En qué áreas?",
                    ),
                ),
                (
                    "areaOficio",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="area_oficio_dimension",
                        to="legajos.areacurso",
                        verbose_name="¿En qué áreas?",
                    ),
                ),
                (
                    "asiste_escuela",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.asisteescuela",
                        verbose_name="¿Asistís o asististe alguna vez a algún establecimiento educativo?",
                    ),
                ),
                (
                    "ciclo",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="ciclo_dimension",
                        to="legajos.niveleducativo",
                    ),
                ),
                (
                    "estado_nivel",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.estadoniveleducativo",
                        verbose_name="Estado del nivel",
                    ),
                ),
                (
                    "fk_legajo",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="legajos.legajos",
                    ),
                ),
                (
                    "gestion",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.tipogestion",
                        verbose_name="Tipo de gestión",
                    ),
                ),
                (
                    "grado",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.grado",
                    ),
                ),
                (
                    "institucion",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.institucioneseducativas",
                        verbose_name="Escuela",
                    ),
                ),
                (
                    "localidadInstitucion",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="configuraciones.localidad",
                        verbose_name="Localidad de la institucion",
                    ),
                ),
                (
                    "max_nivel",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="max_nivel_dimension",
                        to="legajos.niveleducativo",
                        verbose_name="Máximo nivel educativo alcanzado",
                    ),
                ),
                (
                    "municipioInstitucion",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="configuraciones.municipio",
                        verbose_name="Municipio de la institucion",
                    ),
                ),
                (
                    "nivelIncompleto",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="nivel_incompleto_dimension",
                        to="legajos.motivonivelincompleto",
                        verbose_name="¿Cuál fue el motivo principal por el que no terminaste tus estudios?",
                    ),
                ),
                (
                    "provinciaInstitucion",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="configuraciones.provincia",
                        verbose_name="Provincia de la institucion",
                    ),
                ),
                (
                    "sinEduFormal",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sin_edu_formal_dimension",
                        to="legajos.motivonivelincompleto",
                        verbose_name="¿Cuál fue el motivo principal por el que nunca asististe a un establecimiento educativo?",
                    ),
                ),
                (
                    "turno",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.turno",
                        verbose_name="Turno",
                    ),
                ),
            ],
            options={
                "verbose_name": "DimensionEducacion",
                "verbose_name_plural": "DimensionesEducacion",
                "ordering": ["fk_legajo"],
            },
        ),
        migrations.CreateModel(
            name="DimensionEconomia",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cant_aportantes",
                    models.SmallIntegerField(
                        blank=True,
                        null=True,
                        verbose_name="¿Cuántos miembros reciben ingresos por plan social o aportan al grupo familiar?",
                    ),
                ),
                (
                    "obs_economia",
                    models.CharField(
                        blank=True,
                        max_length=500,
                        null=True,
                        verbose_name="Observaciones",
                    ),
                ),
                ("creado", models.DateField(auto_now_add=True)),
                ("modificado", models.DateField(auto_now=True)),
                (
                    "ingresos",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Ingresos Mensuales "
                    ),
                ),
                (
                    "recibe_plan",
                    models.BooleanField(
                        default=False, verbose_name="¿Recibe planes sociales?"
                    ),
                ),
                (
                    "fk_legajo",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="legajos.legajos",
                    ),
                ),
                (
                    "m2m_planes",
                    models.ManyToManyField(
                        blank=True, to="configuraciones.planessociales"
                    ),
                ),
            ],
            options={
                "verbose_name": "DimensionEconomica",
                "verbose_name_plural": "DimensionesEconomicas",
                "ordering": ["fk_legajo"],
            },
        ),
        migrations.CreateModel(
            name="Llamado",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fecha", models.DateTimeField(auto_now_add=True)),
                ("observaciones", models.CharField(max_length=500)),
                (
                    "fk_estado",
                    models.ForeignKey(
                        default=1,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.estadosllamados",
                    ),
                ),
                (
                    "fk_legajo",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.legajos",
                    ),
                ),
                (
                    "fk_programas_llamados",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.programasllamados",
                    ),
                ),
                (
                    "fk_subtipollamado",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.subtipollamado",
                    ),
                ),
                (
                    "fk_tipo_llamado",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.tipollamado",
                    ),
                ),
                (
                    "fk_usuario",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Llamado",
                "verbose_name_plural": "Llamados",
                "ordering": ["-fecha"],
                "indexes": [
                    models.Index(
                        fields=["fk_legajo"], name="legajos_lla_fk_lega_5a5e8f_idx"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="LegajosDerivaciones",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("detalles", models.CharField(blank=True, max_length=500, null=True)),
                (
                    "archivos",
                    models.FileField(
                        blank=True, null=True, upload_to="legajos/archivos"
                    ),
                ),
                (
                    "obs_rechazo",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("fecha_rechazo", models.DateField(blank=True, null=True)),
                ("fecha_creado", models.DateField(auto_now_add=True, null=True)),
                ("fecha_modificado", models.DateField(auto_now=True)),
                (
                    "estado",
                    models.ForeignKey(
                        blank=True,
                        default="Pendiente",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.estadoderivacion",
                    ),
                ),
                (
                    "fk_legajo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="legajos.legajos",
                    ),
                ),
                (
                    "fk_organismo",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="configuraciones.organismos",
                    ),
                ),
                (
                    "fk_programa",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="programa_derivado",
                        to="configuraciones.programas",
                    ),
                ),
                (
                    "fk_programa_solicitante",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="programa_solicitante",
                        to="configuraciones.programas",
                    ),
                ),
                (
                    "fk_usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "importancia",
                    models.ForeignKey(
                        blank=True,
                        default="Alta",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.importancia",
                    ),
                ),
                (
                    "m2m_alertas",
                    models.ManyToManyField(
                        blank=True, to="configuraciones.categoriaalertas"
                    ),
                ),
                (
                    "motivo_rechazo",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legajos.rechazo",
                    ),
                ),
            ],
            options={
                "verbose_name": "LegajoDerivacion",
                "verbose_name_plural": "LegajosDerivaciones",
                "ordering": ["-fecha_creado"],
                "indexes": [
                    models.Index(
                        fields=["fk_legajo"], name="legajos_leg_fk_lega_b41fbd_idx"
                    ),
                    models.Index(
                        fields=["estado"], name="legajos_leg_estado__eaaf78_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="LegajosArchivos",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("archivo", models.FileField(upload_to="legajos/archivos/")),
                ("fecha", models.DateTimeField(auto_now_add=True)),
                ("tipo", models.CharField(max_length=255)),
                (
                    "fk_legajo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="legajos.legajos",
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["fk_legajo"], name="legajos_leg_fk_lega_a260b0_idx"
                    )
                ],
            },
        ),
        migrations.AddIndex(
            model_name="legajos",
            index=models.Index(
                fields=["apellido"], name="legajos_leg_apellid_ad4c82_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="legajos",
            index=models.Index(
                fields=["fecha_nacimiento"], name="legajos_leg_fecha_n_e3cb49_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="legajos",
            index=models.Index(
                fields=["documento"], name="legajos_leg_documen_045939_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="legajos",
            index=models.Index(
                fields=["observaciones"], name="legajos_leg_observa_3a9bc1_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="legajos",
            unique_together={("tipo_doc", "documento")},
        ),
        migrations.AddIndex(
            model_name="legajogrupohogar",
            index=models.Index(
                fields=["fk_legajo_1Hogar"], name="legajos_leg_fk_lega_5d5e1c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="legajogrupohogar",
            index=models.Index(
                fields=["fk_legajo_2Hogar"], name="legajos_leg_fk_lega_73d38e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="legajogrupofamiliar",
            index=models.Index(
                fields=["fk_legajo_1_id"], name="legajos_leg_fk_lega_0b4dcf_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="legajogrupofamiliar",
            index=models.Index(
                fields=["fk_legajo_2_id"], name="legajos_leg_fk_lega_e295d0_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="legajogrupofamiliar",
            unique_together={("fk_legajo_1", "fk_legajo_2")},
        ),
        migrations.AddIndex(
            model_name="legajoalertas",
            index=models.Index(
                fields=["fk_alerta"], name="legajos_leg_fk_aler_1c8759_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="legajoalertas",
            index=models.Index(
                fields=["fk_legajo"], name="legajos_leg_fk_lega_3fd8e4_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="legajoalertas",
            unique_together={("fk_legajo", "fk_alerta")},
        ),
        migrations.AddIndex(
            model_name="intervencion",
            index=models.Index(
                fields=["fk_legajo"], name="legajos_int_fk_lega_41fc5f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="historiallegajoalertas",
            index=models.Index(
                fields=["fk_legajo"], name="legajos_his_fk_lega_4216c1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dimensionvivienda",
            index=models.Index(
                fields=["fk_legajo"], name="legajos_dim_fk_lega_1c7d23_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dimensiontrabajo",
            index=models.Index(
                fields=["fk_legajo"], name="legajos_dim_fk_lega_d2ef81_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dimensionsalud",
            index=models.Index(
                fields=["fk_legajo"], name="legajos_dim_fk_lega_9a30a2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dimensioneducacion",
            index=models.Index(
                fields=["fk_legajo"], name="legajos_dim_fk_lega_e242c3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dimensioneconomia",
            index=models.Index(
                fields=["fk_legajo"], name="legajos_dim_fk_lega_ed77ee_idx"
            ),
        ),
    ]
