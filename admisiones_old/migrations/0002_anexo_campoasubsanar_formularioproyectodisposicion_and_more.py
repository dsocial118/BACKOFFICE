# Generated by Django 4.2.20 on 2025-06-17 15:03

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("admisiones", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Anexo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "expediente",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Expediente"
                    ),
                ),
                (
                    "efector",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Efector (nombre)",
                    ),
                ),
                (
                    "tipo_espacio",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Comedor", "Comedor"),
                            ("Merendero", "Merendero"),
                            ("Comedor y Merendero", "Comedor y Merendero"),
                        ],
                        max_length=50,
                        null=True,
                        verbose_name="Tipo (Comedor / Merendero)",
                    ),
                ),
                (
                    "domicilio",
                    models.CharField(
                        blank=True, max_length=150, null=True, verbose_name="Domicilio"
                    ),
                ),
                (
                    "mail",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Correo Electrónico",
                    ),
                ),
                (
                    "responsable_apellido",
                    models.CharField(
                        blank=True, max_length=150, null=True, verbose_name="Apellido"
                    ),
                ),
                (
                    "responsable_nombre",
                    models.CharField(
                        blank=True, max_length=150, null=True, verbose_name="Nombre"
                    ),
                ),
                (
                    "responsable_cuit",
                    models.BigIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(10000000000),
                            django.core.validators.MaxValueValidator(99999999999),
                        ],
                        verbose_name="CUIT / CUIL",
                    ),
                ),
                (
                    "responsable_domicilio",
                    models.CharField(
                        blank=True, max_length=150, null=True, verbose_name="Domicilio"
                    ),
                ),
                (
                    "responsable_mail",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Correo Electrónico",
                    ),
                ),
                (
                    "total_acreditaciones",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="Total de acreditaciones a Producir",
                    ),
                ),
                (
                    "plazo_ejecucion",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="Plazo de Ejecución",
                    ),
                ),
                (
                    "desayuno_lunes",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "desayuno_martes",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "desayuno_miercoles",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "desayuno_jueves",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "desayuno_viernes",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "desayuno_sabado",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "desayuno_domingo",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "almuerzo_lunes",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "almuerzo_martes",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "almuerzo_miercoles",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "almuerzo_jueves",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "almuerzo_viernes",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "almuerzo_sabado",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "almuerzo_domingo",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "merienda_lunes",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "merienda_martes",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "merienda_miercoles",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "merienda_jueves",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "merienda_viernes",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "merienda_sabado",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "merienda_domingo",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "cena_lunes",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "cena_martes",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "cena_miercoles",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "cena_jueves",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "cena_viernes",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "cena_sabado",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "cena_domingo",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "admision",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="admisiones.admision",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CampoASubsanar",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("campo", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="FormularioProyectoDisposicion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("incorporacion", "Incorporación"),
                            ("renovacion", "Renovación"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "archivo",
                    models.FileField(
                        null=True, upload_to="admisiones/formularios_disposicion/"
                    ),
                ),
                ("creado", models.DateTimeField(auto_now_add=True)),
                (
                    "admision",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="proyecto_disposicion",
                        to="admisiones.admision",
                    ),
                ),
                (
                    "creado_por",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="InformeTecnico",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tipo",
                    models.CharField(
                        choices=[("base", "Base"), ("juridico", "Jurídico")],
                        max_length=20,
                    ),
                ),
                (
                    "expediente_nro",
                    models.CharField(max_length=100, verbose_name="Número Expediente"),
                ),
                (
                    "nombre_organizacion",
                    models.CharField(
                        max_length=255,
                        verbose_name="Nombre de la Organización Solicitante",
                    ),
                ),
                (
                    "domicilio_organizacion",
                    models.CharField(
                        max_length=255,
                        verbose_name="Domicilio de la Organización Solicitante",
                    ),
                ),
                (
                    "localidad_organizacion",
                    models.CharField(
                        max_length=255,
                        verbose_name="Localidad de la Organización Solicitante",
                    ),
                ),
                (
                    "partido_organizacion",
                    models.CharField(
                        max_length=255,
                        verbose_name="Partido de la Organización Solicitante",
                    ),
                ),
                (
                    "provincia_organizacion",
                    models.CharField(
                        max_length=255,
                        verbose_name="Provincia de la Organización Solicitante",
                    ),
                ),
                (
                    "telefono_organizacion",
                    models.CharField(
                        max_length=50,
                        verbose_name="Teléfono de la Organización Solicitante",
                    ),
                ),
                (
                    "mail_organizacion",
                    models.EmailField(
                        max_length=254,
                        verbose_name="Mail de la Organización Solicitante",
                    ),
                ),
                (
                    "cuit_organizacion",
                    models.CharField(
                        max_length=20,
                        verbose_name="CUIT de la Organización Solicitante",
                    ),
                ),
                (
                    "representante_nombre",
                    models.CharField(
                        max_length=255,
                        verbose_name="Nombre y Apellido del Representante",
                    ),
                ),
                (
                    "representante_cargo",
                    models.CharField(
                        max_length=100, verbose_name="Cargo del Representante"
                    ),
                ),
                (
                    "representante_dni",
                    models.CharField(
                        max_length=20, verbose_name="DNI del Representante"
                    ),
                ),
                (
                    "tipo_espacio",
                    models.CharField(
                        choices=[
                            ("Comedor", "Comedor"),
                            ("Merendero", "Merendero"),
                            ("Comedor y Merendero", "Comedor y Merendero"),
                        ],
                        max_length=50,
                        verbose_name="Tipo de Espacio Comunitario",
                    ),
                ),
                (
                    "nombre_espacio",
                    models.CharField(
                        max_length=255, verbose_name="Nombre del Comedor/Merendero"
                    ),
                ),
                (
                    "domicilio_espacio",
                    models.CharField(
                        max_length=255, verbose_name="Domicilio del Comedor/Merendero"
                    ),
                ),
                (
                    "barrio_espacio",
                    models.CharField(
                        max_length=255, verbose_name="Barrio del Comedor/Merendero"
                    ),
                ),
                (
                    "localidad_espacio",
                    models.CharField(
                        max_length=255, verbose_name="Localidad del Comedor/Merendero"
                    ),
                ),
                (
                    "partido_espacio",
                    models.CharField(
                        max_length=255, verbose_name="Partido del Comedor/Merendero"
                    ),
                ),
                (
                    "provincia_espacio",
                    models.CharField(
                        max_length=255, verbose_name="Provincia del Comedor/Merendero"
                    ),
                ),
                (
                    "responsable_tarjeta_nombre",
                    models.CharField(
                        max_length=255,
                        verbose_name="Nombre del Responsable de la Tarjeta",
                    ),
                ),
                (
                    "responsable_tarjeta_dni",
                    models.CharField(
                        max_length=20, verbose_name="DNI del Responsable de la Tarjeta"
                    ),
                ),
                (
                    "responsable_tarjeta_domicilio",
                    models.CharField(
                        max_length=255,
                        verbose_name="Domicilio del Responsable de la Tarjeta",
                    ),
                ),
                (
                    "responsable_tarjeta_localidad",
                    models.CharField(
                        max_length=255,
                        verbose_name="Localidad del Responsable de la Tarjeta",
                    ),
                ),
                (
                    "responsable_tarjeta_provincia",
                    models.CharField(
                        max_length=255,
                        verbose_name="Provincia del Responsable de la Tarjeta",
                    ),
                ),
                (
                    "responsable_tarjeta_telefono",
                    models.CharField(
                        max_length=50,
                        verbose_name="Teléfono del Responsable de la Tarjeta",
                    ),
                ),
                (
                    "responsable_tarjeta_mail",
                    models.EmailField(
                        max_length=254,
                        verbose_name="Mail del Responsable de la Tarjeta",
                    ),
                ),
                (
                    "nota_gde_if",
                    models.CharField(max_length=255, verbose_name="Nota GDE IF"),
                ),
                (
                    "constancia_subsidios_dnsa",
                    models.CharField(
                        max_length=255,
                        verbose_name="Constancia IF RTA DNSA sobre subsidios",
                    ),
                ),
                (
                    "constancia_subsidios_pnud",
                    models.CharField(
                        max_length=255,
                        verbose_name="Constancia IF RTA PNUD sobre subsidios",
                    ),
                ),
                (
                    "partido_poblacion_destinataria",
                    models.CharField(
                        max_length=255,
                        verbose_name="Partido donde se ubica la población destinataria",
                    ),
                ),
                (
                    "provincia_poblacion_destinataria",
                    models.CharField(
                        max_length=255,
                        verbose_name="Provincia donde se ubica la población destinataria",
                    ),
                ),
                (
                    "prestaciones_desayuno_numero",
                    models.IntegerField(
                        default=0,
                        verbose_name="Cantidad de Prestaciones Semanales Desayuno - En números (Solicitante)",
                    ),
                ),
                (
                    "prestaciones_almuerzo_numero",
                    models.IntegerField(
                        default=0,
                        verbose_name="Cantidad de Prestaciones Semanales Almuerzo - En números (Solicitante)",
                    ),
                ),
                (
                    "prestaciones_merienda_numero",
                    models.IntegerField(
                        default=0,
                        verbose_name="Cantidad de Prestaciones Semanales Merienda - En números (Solicitante)",
                    ),
                ),
                (
                    "prestaciones_cena_numero",
                    models.IntegerField(
                        default=0,
                        verbose_name="Cantidad de Prestaciones Semanales Cena - En números (Solicitante)",
                    ),
                ),
                (
                    "prestaciones_desayuno_letras",
                    models.CharField(
                        max_length=255,
                        verbose_name="Cantidad de Prestaciones Semanales Desayuno - En letras (Solicitante)",
                    ),
                ),
                (
                    "prestaciones_almuerzo_letras",
                    models.CharField(
                        max_length=255,
                        verbose_name="Cantidad de Prestaciones Semanales Almuerzo - En letras (Solicitante)",
                    ),
                ),
                (
                    "prestaciones_merienda_letras",
                    models.CharField(
                        max_length=255,
                        verbose_name="Cantidad de Prestaciones Semanales Merienda - En letras (Solicitante)",
                    ),
                ),
                (
                    "prestaciones_cena_letras",
                    models.CharField(
                        max_length=255,
                        verbose_name="Cantidad de Prestaciones Semanales Cena - En letras (Solicitante)",
                    ),
                ),
                (
                    "if_relevamiento",
                    models.CharField(
                        max_length=255, verbose_name="IF de relevamiento territorial"
                    ),
                ),
                (
                    "declaracion_jurada_recepcion_subsidios",
                    models.CharField(
                        max_length=255,
                        verbose_name="Declaración Jurada sobre recepción de subsidios nacionales",
                    ),
                ),
                (
                    "constancia_inexistencia_percepcion_otros_subsidios",
                    models.CharField(
                        max_length=255,
                        verbose_name="Constancia de inexistencia de percepción de otros subsidios nacionales",
                    ),
                ),
                (
                    "organizacion_avalista_1",
                    models.CharField(
                        max_length=255, verbose_name="Organización Avalista 1"
                    ),
                ),
                (
                    "organizacion_avalista_2",
                    models.CharField(
                        max_length=255, verbose_name="Organización Avalista 2"
                    ),
                ),
                (
                    "material_difusion_vinculado",
                    models.CharField(
                        max_length=255, verbose_name="Material de difusión vinculado"
                    ),
                ),
                (
                    "validacion_registro_nacional",
                    models.CharField(
                        max_length=255,
                        verbose_name="Validación Registro Nacional Comedores/Merenderos",
                    ),
                ),
                (
                    "IF_relevamiento_territorial",
                    models.CharField(
                        max_length=255, verbose_name="IF de relevamiento territorial"
                    ),
                ),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("Para revision", "Para revisión"),
                            ("Validado", "Validado"),
                            ("A subsanar", "A subsanar"),
                        ],
                        default="Para revision",
                        max_length=20,
                        verbose_name="Estado del Informe",
                    ),
                ),
                (
                    "admision",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="admisiones.admision",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ObservacionGeneralInforme",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("texto", models.TextField()),
                (
                    "informe",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="admisiones.informetecnico",
                    ),
                ),
            ],
        ),
        migrations.RemoveField(
            model_name="informetecnicobase",
            name="admision",
        ),
        migrations.RemoveField(
            model_name="informetecnicojuridico",
            name="admision",
        ),
        migrations.RemoveField(
            model_name="formularioproyectodeconvenio",
            name="pregunta1",
        ),
        migrations.RemoveField(
            model_name="formularioproyectodeconvenio",
            name="pregunta2",
        ),
        migrations.RemoveField(
            model_name="formularioproyectodeconvenio",
            name="pregunta3",
        ),
        migrations.AddField(
            model_name="formularioproyectodeconvenio",
            name="archivo",
            field=models.FileField(
                null=True, upload_to="admisiones/formularios_convenio/"
            ),
        ),
        migrations.AlterField(
            model_name="archivoadmision",
            name="archivo",
            field=models.FileField(
                blank=True, null=True, upload_to="admisiones/admisiones_archivos/"
            ),
        ),
        migrations.AlterField(
            model_name="documentosexpediente",
            name="archivo",
            field=models.FileField(
                blank=True, null=True, upload_to="admisiones/expediente"
            ),
        ),
        migrations.AlterField(
            model_name="formularioproyectodeconvenio",
            name="admision",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="proyecto_convenio",
                to="admisiones.admision",
            ),
        ),
        migrations.AlterField(
            model_name="informetecnicopdf",
            name="archivo",
            field=models.FileField(upload_to="admisiones/informes_tecnicos/"),
        ),
        migrations.DeleteModel(
            name="FormularioRESO",
        ),
        migrations.DeleteModel(
            name="InformeTecnicoBase",
        ),
        migrations.DeleteModel(
            name="InformeTecnicoJuridico",
        ),
        migrations.AddField(
            model_name="campoasubsanar",
            name="informe",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="admisiones.informetecnico",
            ),
        ),
    ]
